<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>学习第一步，使用hexo搭建自己的博客</title>
      <link href="2020/11/03/xue-xi-di-yi-bu-shi-yong-hexo-da-jian-zi-ji-de-bo-ke/"/>
      <url>2020/11/03/xue-xi-di-yi-bu-shi-yong-hexo-da-jian-zi-ji-de-bo-ke/</url>
      
        <content type="html"><![CDATA[<h1 id="小白的hexo博客快速搭建法"><a href="#小白的hexo博客快速搭建法" class="headerlink" title="小白的hexo博客快速搭建法"></a>小白的hexo博客快速搭建法</h1><h2 id="注：此文章是在看大佬的搭建法后的总结和自己写博客的尝试，想搭博客的小伙伴可以直接看文末链接。"><a href="#注：此文章是在看大佬的搭建法后的总结和自己写博客的尝试，想搭博客的小伙伴可以直接看文末链接。" class="headerlink" title="注：此文章是在看大佬的搭建法后的总结和自己写博客的尝试，想搭博客的小伙伴可以直接看文末链接。"></a>注：此文章是在看大佬的搭建法后的总结和自己写博客的尝试，想搭博客的小伙伴可以直接看文末链接。</h2><h2 id="我将我遇到问题后发现的注意点写了下来，以供参考。"><a href="#我将我遇到问题后发现的注意点写了下来，以供参考。" class="headerlink" title="我将我遇到问题后发现的注意点写了下来，以供参考。"></a>我将我遇到问题后发现的注意点写了下来，以供参考。</h2><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li>下载git  </li></ul><p>百度官网下载git，这是个方方面面都用的到的工具   </p><ul><li>网上注册github账号  </li></ul><p>想部署到远端必须有这个，注意用户名写全小写英文的，可以有数字，但不要有中文和大写英文，免得造成不必要的麻烦。 </p><p>创建的数据库最好是用户名.github.io的格式，理由同上，其中.github.io的后缀必须要有。  </p><ul><li>下载nodejs  </li></ul><p>同样官网下载，下载方法自行百度，请仔细阅读下载流程，一定记得选Add。（具体网上有)   </p><ul><li>配置node环境变量  </li></ul><p>打开下载好的nodejs文件夹，新建node_cecal和node_global。  </p><p>我的文件地址是D:\Program Files\nodejs，具体看自己下载情况  </p><p>右击此电脑，选择属性，高级系统设置，环境变量<br>在用户变量PATH新建D:\Program Files\nodejs\node_global\ 具体位置看自己安装位置<br>在系统变量中新建变量名NODE_PATH 变量位置D:\Program Files\nodejs\node_modules 位置依旧是自己安装的位置，这里写出的是我的安装位置。  </p><p>接着打开终端，指定路径到新建的两个文件夹npm config set prefix”D:\Program Files\nodejs\node_global”<br>和npm config cache”D:\Program Files\nodejs\node_cache”这里引号里的位置是自己的，别全抄我的。  </p><p>最后检查node和git的安装情况，一般git不会出问题，所以可以忽略。<br>使用 source install.sh test_git检查git<br>使用 source install.sh test_node检查node（这里其实不用这么麻烦，输node -v就可以，install.sh是装了脚本的命令）<br>最后检查一下npm用npm -v ，这是我自己的经验<br>以上均出现版本号是正常  </p><p>到这里，准备工作完成  </p><h2 id="开始搭建"><a href="#开始搭建" class="headerlink" title="开始搭建"></a>开始搭建</h2><ul><li>这里正常思路是直接手搭，但这方法对许多小白来说太不友好，所以这里推荐大佬的脚本搭建。  </li></ul><p>复制 （curl -O <a href="https://cdn.jsdelivr.net/gh/kjhuanhao/hexo-script@master/install.sh%EF%BC%89">https://cdn.jsdelivr.net/gh/kjhuanhao/hexo-script@master/install.sh）</a><br>【括号里都要】 任选一个文件夹使用git下载脚本即可，记住下载位置（脚本搭建这是第一步）。<br>注：手搭以后会写，这篇只分享友好小白的脚本搭建  </p><p>打开保存了脚本的文件夹，用git输入source install.sh hexo_win这样该有的基本就一键搭齐了。<br>接下来从自动配置的hexoblog文件夹打开git，用hexo s就可以查看博客了。  </p><ul><li>部署进github数据库<br>在存放脚本的目录用git输入  ./install.sh git_ssh开始配置密钥，英语不好的小伙伴建议全程百度翻译，不然就准备走我的老路吧（看不懂英语没密钥没部署就过了）  </li></ul><p>在进行第二个选项得到密钥后，打开你的github，将密钥添加上去（注意格式，全复制最ok）<br>运行3检查无误，运行4可能会告诉你公钥有问题什么的，不用管。  </p><p>确认部署完成后，在有脚本的文件夹中运行source install.sh deploy<br>将出现的up.sh复制进hexoblog目录下  </p><p>打开博客目录下的_config.yml文件，无法打开去网上下编译工具，随便一个都行。<br>拉至最下方，修改deploy内容，这里大佬的文章中写的很清楚，我不再赘述<br>然后在此目录下运行source up.sh 如果报错，运行cnpm install hexo-deployer-git –save或者是npm install hexo-deployer-git –save  </p><p>到这里，博客就搭建完成了，当然为了保险起见，在hexoblog目录打开git<br>依次输入hexo clean     hexo g    hexo d 最后hexo s查看  </p><h2 id="教我搭建的大佬搭建教程链接-amp-主题配置链接"><a href="#教我搭建的大佬搭建教程链接-amp-主题配置链接" class="headerlink" title="教我搭建的大佬搭建教程链接&amp;主题配置链接"></a>教我搭建的大佬搭建教程链接&amp;主题配置链接</h2><ul><li><p>b站<a href="https://space.bilibili.com/431556388?spm_id_from=333.788.b_765f7570696e666f.1">https://space.bilibili.com/431556388?spm_id_from=333.788.b_765f7570696e666f.1</a><br>（我是看他的视频开始搭建的，准备工作讲的很细，后面水了）  </p></li><li><p>脚本搭建<a href="https://hexoscript.gitbook.io/hexo-script/v/1.3-1/shi-yong-bu-zhou/yi-jian-bu-shu-hexo-bo-ke">https://hexoscript.gitbook.io/hexo-script/v/1.3-1/shi-yong-bu-zhou/yi-jian-bu-shu-hexo-bo-ke</a><br>从下载脚本到搭建完成我都是靠这篇  </p></li><li><p>主题修改<br><a href="https://blog.csdn.net/victoryxa/article/details/105841309">https://blog.csdn.net/victoryxa/article/details/105841309</a>  </p><p><a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md#%E4%BF%AE%E6%94%B9%E4%B8%BB%E9%A2%98%E9%A2%9C%E8%89%B2">https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md#%E4%BF%AE%E6%94%B9%E4%B8%BB%E9%A2%98%E9%A2%9C%E8%89%B2</a><br>【主题按b站视频中方式搭建即可，用其他的也没问题，百度方法很多，我只是做个汇总】<br>【文章中和链接中不同部分是我经验之谈，当然每个人的搭建过程都有区别，参考即可】<br>【新手上路，此篇无图】<br>【以后会有的】  </p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2020/10/25/hello-world/"/>
      <url>2020/10/25/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
