<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>linux学习笔记</title>
      <link href="2020/11/06/linux-xue-xi-bi-ji/"/>
      <url>2020/11/06/linux-xue-xi-bi-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="linux基本命令学习笔记"><a href="#linux基本命令学习笔记" class="headerlink" title="linux基本命令学习笔记"></a>linux基本命令学习笔记</h1><h2 id="基本命令符的含义"><a href="#基本命令符的含义" class="headerlink" title="基本命令符的含义"></a>基本命令符的含义</h2><ul><li><p>终端符号含义解释<br><img src="linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/2.png"><br>mujie 用户名，表示现在进行操作的是mujie这个用户<br>ubuntu 主机名称，我现在示例的主机是ubuntu<br>“~“ 指示用户位置，表示家目录[home目录]<br>Desktop 指示用户位置，表示我现在处于桌面目录中   </p></li><li><p>路径的概念<br>绝对路径：从根目录开始到该目录的全部路径，例如：D:\CTF\boke\mybolg\hexoblog 就是到hexoblog的绝对路径<br>相对路径：指由这个文件所在的路径引起的跟其它文件（或文件夹）的路径关系，比如我现在如果处于mybolg文件夹中，那么hexoblog和boke两个<br>相邻路径都是相对与mybolg文件夹的相对路径。   </p></li><li><p>命令的格式<br><img src="linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/3.png"><br>cat是用于查看文件的命令，-b是选项，mu是文件夹名称<br>每个选项格式均为[-选项字母]看情况选择是否添加<br>选项可连续使用，如ls -alh  </p></li></ul><h3 id="linux学习须知"><a href="#linux学习须知" class="headerlink" title="linux学习须知"></a>linux学习须知</h3><ul><li><p>软件包的概念<br>linux系统的常用软件都储存在数据库中，下载时只是用命令从数据库中下载，所以非常方便。    </p></li><li><p>软件源<br>软件源是指下载软件的数据库，因为linux是国外的系统，所以如果按默认软件源，下载软件的速度会非常感人。所以有时需要将软件源设置到国内的镜像，以提升下载速度。 </p></li><li><p>Tab键<br>快速补齐命令，是linux系统操作是非常常用的按键。还可用于忘记命令时进行提示等操作，   </p></li></ul><h2 id="命令笔记"><a href="#命令笔记" class="headerlink" title="命令笔记"></a>命令笔记</h2><h3 id="文件的创建-amp-目录切换"><a href="#文件的创建-amp-目录切换" class="headerlink" title="文件的创建&amp;目录切换"></a>文件的创建&amp;目录切换</h3><h4 id="文件创建命令"><a href="#文件创建命令" class="headerlink" title="文件创建命令"></a>文件创建命令</h4><ul><li>touch<br>创建一个文件，例：touch 111.txt 意为创建一个名为111.txt的文件<br>同时创建多个同级文件，例 touch 111 112 113 114   </li></ul><ul><li>mkdir<br>创建一个文件夹，例：mkdir 111 意为创建一个名为111的文件夹<br>同时创建多个同级目录，例  mkdir 111 112 113 114   </li></ul><p>  -p选项<br>   同时创建多个递归目录，例 mkdir -p 111/112/113/114   </p><h4 id="目录切换命令"><a href="#目录切换命令" class="headerlink" title="目录切换命令"></a>目录切换命令</h4><ul><li>cd<br>切换目录<br>cd .. 回到上一级目录<br>cd . 留在当前目录<br>cd /切换至根目录<br>cd -切换至上一次工作路径<br>cd [目录名] 切换到指定目录，<br>注：cd 命令相对路径只能一级一级切换，如同图形界面只能一个一个打开文件夹  <pre><code> cd命令绝对路径可以直接打开目标文件，无需一级一级切换。  </code></pre></li></ul><h3 id="查看文件-amp-文件复制与移动删除"><a href="#查看文件-amp-文件复制与移动删除" class="headerlink" title="查看文件&amp;文件复制与移动删除"></a>查看文件&amp;文件复制与移动删除</h3><h4 id="查看文件命令"><a href="#查看文件命令" class="headerlink" title="查看文件命令"></a>查看文件命令</h4><ul><li>ls 查看当前目录下的文件   </li><li>a选项，查看所有文件，包括隐藏文件。例<br><img src="linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/1.png"><br>  其中文件名前有点的为隐藏文件  </li></ul><p>  -l选项，查看该目录下文件的详细信息<br><img src="linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/4.png"><br>  -h选项，使查看到的内容更加人性化<br>  <img src="linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/5.png"><br>  这里直观的看到内存从一些看不懂的数字变为了看的懂的表示方法  </p><ul><li>tree 以树状图的方式查看所在目录下的文件<br>需要运行命令下载，按终端提示即可  </li></ul><ul><li>cat 查看文件内容  </li><li>b选项，将查看到的内容输出行号，空行不输出<br><img src="linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/6.png"><br>如图3行和4行中间无行号  </li></ul><p>-n选项，输出所有行号，包括空行。<br><img src="linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/7.png"><br>如图可见空行也输出了行号  </p><ul><li><p>more 查看文件内容<br>基本用法同cat类似，但如遇到内容极多的文件，cat命令直接显示至最底部，more从最开始按页显示。<br><img src="linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/8.png"><br>按空格一次翻一页<br>按Enter向下 n 行，需要定义。默认为 1 行<br>按Ctrl+B后退一页<br>按Ctrl+F向前一页<br>按q退出查看  </p></li><li><p>grep 查看文件<br>不同于cat和more，grep后接字符可查找指定内容<br>如grep 11 mu 意为查看mu文件中所有包含11的行    </p><ul><li>pwd 查看当前工作路径  </li></ul></li></ul><h4 id="文件的复制-amp-移动-amp-删除"><a href="#文件的复制-amp-移动-amp-删除" class="headerlink" title="文件的复制&amp;移动&amp;删除"></a>文件的复制&amp;移动&amp;删除</h4><ul><li><p>cp 复制文件<br>格式为cp （需复制文件的位置）/[需复制文件的文件名] (复制后文件的位置)/ [复制后文件的文件名]<br>括号内内容可不选，仅用于从一个大目录到另一个大目录<br>如cp ./ mu ~/Desktop mi 意为将当前目录下的文件mu复制到桌面，并命名为mi（同一位置不能出现两个同名文件）  </p></li><li><p>i选项，出现重名文件询问是否覆盖<br><img src="linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/9.png">  </p></li><li><p>mv 对文件重命名或移动文件<br> 在同一目录中操作，如mv mu mi意为将mu文件重命名为mi<br> 移动至其他文件夹夹，格式等同与cp命令但无需移动后文件名，如mv mu ./114意为将m文件mu移动至114文件夹  </p></li><li><p>rmdir 删除文件夹<br>rmdir命令只能删除文件夹，无法删除文件<br>与创建文件夹命令mkdir对应  </p></li><li><p>rm 删除文件<br>rm 后加文件名可删除文件，但无法删除文件夹  </p></li><li><p>r选项，删除文件夹和目录，如rm -r 114是删除114这个文件夹  </p></li><li><p>rf选项，删除且不询问  </p></li><li><p>i选项，删除前逐一询问<br>注：rm -r命令需谨慎使用，一不小心就会成rm -rf / 删库  </p></li><li><p>clear 清空终端页面内容与缓存，超级常用的命令。  </p></li></ul><h3 id="用户权限及组管理"><a href="#用户权限及组管理" class="headerlink" title="用户权限及组管理"></a>用户权限及组管理</h3><h4 id="用户权限详解"><a href="#用户权限详解" class="headerlink" title="用户权限详解"></a>用户权限详解</h4><ul><li>ls -l 查看页面解释<br><img src="linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/4.png"><br>解释顺序从左到右<br>第一个d(-)说明文件类型，d为文件夹，-为文件<br>rwxrwxr-x 三位数为一组，从左到右依次为拥有者权限，组权限，其他人的权限<br>r 可读权限，常用数字4代替<br>w 可写权限，常用数字2代替<br>x 可执行权限，常用数字1代替  </li></ul><p>第一个mujie意为该目录的拥有者（创建者）为用户mujie，对应第一组权限<br>第二个mujie意为组名称为mujie，对应第二组权限  </p><h4 id="root权限的获取"><a href="#root权限的获取" class="headerlink" title="root权限的获取"></a>root权限的获取</h4><ul><li>获取命令<br>sudo passwd root 获取root权限并设置密码<br><img src="linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/12.png"><br>设置后用su（切换用户命令）即可进入root<br>设置后使用sudo可用root运行后续命令，但只能进入五分钟，超过五分钟需重新输入密码  </li></ul><h4 id="权限的修改"><a href="#权限的修改" class="headerlink" title="权限的修改"></a>权限的修改</h4><ul><li>chmod 修改文件权限<br>chomd后常跟权限选项<br>例：chomd +r 1 给所有用户1文件的可读权限<br>chmod -r 1 给所有用户取消对1文件的可读权限<br>r w x 用法均相同<br><img src="linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/10.png">  </li><li>-指定权限修改<br>指定修改文件权限用数字表示<br>-R修改一个目录下所有文件权限<br>例：chmod -R 777 1<br>这里7表示权限所对应的数字和，此时为rwx（4+2+1=7）,其他同理<br><img src="linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/11.png">  </li></ul><h4 id="创建组，删除组-amp-查看组，修改文件所属组"><a href="#创建组，删除组-amp-查看组，修改文件所属组" class="headerlink" title="创建组，删除组&amp;查看组，修改文件所属组"></a>创建组，删除组&amp;查看组，修改文件所属组</h4><h5 id="创建与删除组"><a href="#创建与删除组" class="headerlink" title="创建与删除组"></a>创建与删除组</h5><p>创建组与删除组均为group起头<br>创建组与删除组均需在root权限下运行或使用sudo命令   </p><ul><li><p>groupadd 创建组<br>例：sudo groupadd 1234 创建一个名为1234的组  </p></li><li><p>groupdel 删除组<br>例：sudo groupdel 1234 删除名为1234的组  </p><h5 id="查看组-amp-修改文件所属组"><a href="#查看组-amp-修改文件所属组" class="headerlink" title="查看组&amp;修改文件所属组"></a>查看组&amp;修改文件所属组</h5></li><li><p>查看组<br>首先须知，linux中，所有组的信息均储存在etc目录下的group文件中<br>故，无改动情况下，用任意文件查看命令均可查看<br>例：cat /etc/group<br><img src="linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/13.png">  </p></li><li><p>修改文件所属组<br>chgrp<br>各式：chgrp [修改的目标组]  [修改的文件名]<br>例chgrp 12345 1<br><img src="linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/14.png"><br>如图可见组名从原来的mujie变成了12345  </p></li></ul><h4 id="增加与删除用户"><a href="#增加与删除用户" class="headerlink" title="增加与删除用户"></a>增加与删除用户</h4><ul><li><p>useradd 增加用户  </p></li><li><p>m选项，自动生成该用户的家目录  </p></li><li><p>g选项，指定用户所在组，否则自动创建与增加用户同名的组<br>例：sudo useradd -mg zhangsan muyu<br><img src="linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/15.png"><br><img src="linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/16.png">   </p></li><li><p>userdel 删除用户  </p></li><li><p>r选项，同时删除创建的家目录<br>例：sudo userdel -r muyu<br><img src="linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/17.png">  </p></li><li><p>注：在linux中，用户数据保存在etc目录下的passwd文件中，查看用户只需要用任意查看命令查看即可<br>例：cat /etc/passwd   </p></li><li><p>passwd 添加用户的密码<br>格式：passwd [用户名]<br>一般每次创建用户后都需要设置密码<br>例：sudo passwd muyu<br><img src="linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/18.png">   </p></li></ul><h4 id="切换用户-amp-查看用户信息"><a href="#切换用户-amp-查看用户信息" class="headerlink" title="切换用户&amp;查看用户信息"></a>切换用户&amp;查看用户信息</h4><ul><li><p>su 切换用户<br>只输入su时，默认切换至root用户（管理员用户）<br>su [用户名] 切换至目标目录，但不会切换至目标文件夹<br>su - 用户名 切换至目标用户的同时切换至目标用户的家目录文件夹<br><img src="linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/19.png">  </p></li><li><p>who 查看当前登录的用户列表<br><img src="linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/20.png"><br>如图，表示现在muyu用户只有mujie用户登录  </p></li><li><p>whoami 查看当前所在用户<br><img src="linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/21.png"><br>如图表示现在我处于muyu这个用户  </p></li><li><p>id 查看当前用户的id<br>id是用户的识别信息，分为UID和GID。如果说用户名是qq昵称，那id就是账号<br>UID 用户标识<br>GID 组标识  </p></li><li><p>exit 退出当前用户/返回上一个用户<br>使用exit可退出当前所在的用户<br>举个例子，我从mujie用户su进root用户，再从root用户进muyu用户，使用exit命令会使我从muyu用户退出到root用户，而不是退至mujie用户。再从root用户exit，才可退出至mujie用户。<br><img src="linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/22.png">   </p></li></ul><h4 id="主组与附加组"><a href="#主组与附加组" class="headerlink" title="主组与附加组"></a>主组与附加组</h4><ul><li>概念<br>主组：创建用户时设定的组，一般不轻易修改<br>附加组：创建后添加的组，给主组用户提供附加组的权限，如sudo就是一个附加组，无sudo附加组的用户无法执行sudo命令。  </li><li>usermod 修改组<br>-G 修改附加组<br>格式：usermod -G [附加组名称]  [用户名称]<br>-g 修改主组<br>格式：usermod -g [目标主组] [用户名称]  </li><li>修改终端显示页面<br>-s 修改shell(终端显示界面)<br>格式：usermod -s [目标终端页面路径] [用户名]<br>例：usermod -s /bin/bash muyu<br>修改前<br><img src="linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/23.png"><br>修改后：<br><img src="linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/24.png"><br>可以明显看到页面美化了一层<br>注：linux中有两中主要的终端界面，分别是dash和bash。一般linux创建用户默认为dash，因为系统觉得这样操作更方便，但dash页面不美观也不易辨识，在输入一些操作指令时会出现重大缺陷，所以有时需要我们根据需要手动修改。<br>而bash便是我们常用的终端界面，有颜色有位置标识。  </li><li>which 查看命令执行文件位置<br>往往在输入cat /etc/group 查看组位置时容易忘记如etc的目录，所有常需要一个命令查找。<br>例：which sudo<br><img src="linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/25.png">  </li></ul><h3 id="打包压缩与软件安装"><a href="#打包压缩与软件安装" class="headerlink" title="打包压缩与软件安装"></a>打包压缩与软件安装</h3><h4 id="打包压缩"><a href="#打包压缩" class="headerlink" title="打包压缩"></a>打包压缩</h4><p>-tar 打包命令<br> 格式：tar -cvf [打包后文件名。tar] [要打包的文件]<br> <img src="linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/26.png"><br> 注：打包不是压缩，打包文件名后要加.tar  </p><ul><li><p>tar 解包命令<br>格式：tar -xvf [需解包文件]<br><img src="linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/27.png">  </p><p>-c选项，生成档案文件，创建打包文件<br>-v选项，列出归档解档详细进程，显示进度。<br>-f选项，指定档案名称，f后解.tar，所以一定要放在最后。<br>-x选项，解开档案文件  </p></li><li><p>gzip压缩命令<br>格式：gzip [要压缩的tar文件]<br>例：gzip qwer.tar<br><img src="linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/28.png">  </p></li><li><p>bzip2压缩命令<br>格式同gzip  </p></li><li><p>注：gzip和bzip2还有tar一般不单独使用，而是联合使用<br>gzip代表选项-z<br>bzip2代表选项-b<br>故常用的打包压缩命令为 tar -zcvf [压缩包名.tar.gz] [压缩文件名]<br>故常用的解压缩命令为 tar -zxvf [压缩包名.tar.gz]<br>bzip2同理  </p></li></ul><p>-C选项，指定压缩/解压位置<br> <img src="linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/29.png"></p><h4 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h4><ul><li>apt install 安装命令<br>需在sudo下运行<br>格式：sudo apt install [软件包]<br>例：sudo apt install sl  下载一个小火车软件，终端输入sl会出现火车<br><img src="linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/30.png"><br>sudo apt install htop 下载htop 效果是让top命令显示的界面更好看。<br><img src="linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/31.png"><br><img src="linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/32.png">  </li></ul><ul><li>apt remove 卸载命令<br>须在sudo下运行<br>格式：sudo apt remove [软件名]<br>例：sudo apt remove sl 卸载sl软件  </li></ul><ul><li>apt upgrade 升级命令<br>须在sudo下运行<br>格式：sudo apt upgrade 自动检查升级并发出更新情求。<br><img src="linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/33.png">  </li></ul><ul><li>设置软件源<br>设置方法按自己具体版本在百度找方法。  </li></ul><h3 id="系统信息"><a href="#系统信息" class="headerlink" title="系统信息"></a>系统信息</h3><ul><li><p>date 查看当前时间  </p><ul><li>cal 查看日历<br>-y选项，查看一年的日历  </li></ul></li><li><p>df 显示磁盘剩余空间大小<br>-h使显示内容更人性化  </p></li><li><p>du 显示文件占用空间大小<br>-h使显示内容更人性化<br>注：du命令后可接具体文件夹查看<br><img src="linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/34.png">   </p></li><li><p>ps 查看当前用户通过终端启动的 进程<br>aux选项，查看正在进行的全部进程，前面-可加可不加<br>a选项，查看所有进程，包括其他用户进程<br>u选项，查看进程详细状态<br>x选项，查看没有终端控制的进程  </p></li><li><p>top 动态显示系统所有进程并排序<br>按q或ctrl+c退出top查看页面，其中显示的页面第一行是进程代码，需要特别关注。  </p></li><li><p>kill 关闭/杀死进程<br>-9强制终止进程<br>格式：kill -9 [进程代码]   </p></li></ul><h3 id="远程管理"><a href="#远程管理" class="headerlink" title="远程管理"></a>远程管理</h3><ul><li>shh </li></ul><h3 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h3>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学习第一步，使用hexo搭建自己的博客</title>
      <link href="2020/11/03/xue-xi-di-yi-bu-shi-yong-hexo-da-jian-zi-ji-de-bo-ke/"/>
      <url>2020/11/03/xue-xi-di-yi-bu-shi-yong-hexo-da-jian-zi-ji-de-bo-ke/</url>
      
        <content type="html"><![CDATA[<h1 id="小白的hexo博客快速搭建法"><a href="#小白的hexo博客快速搭建法" class="headerlink" title="小白的hexo博客快速搭建法"></a>小白的hexo博客快速搭建法</h1><h2 id="注：此文章是在看大佬的搭建法后的总结和自己写博客的尝试，想搭博客的小伙伴可以直接看文末链接。"><a href="#注：此文章是在看大佬的搭建法后的总结和自己写博客的尝试，想搭博客的小伙伴可以直接看文末链接。" class="headerlink" title="注：此文章是在看大佬的搭建法后的总结和自己写博客的尝试，想搭博客的小伙伴可以直接看文末链接。"></a>注：此文章是在看大佬的搭建法后的总结和自己写博客的尝试，想搭博客的小伙伴可以直接看文末链接。</h2><h2 id="我将我遇到问题后发现的注意点写了下来，以供参考。"><a href="#我将我遇到问题后发现的注意点写了下来，以供参考。" class="headerlink" title="我将我遇到问题后发现的注意点写了下来，以供参考。"></a>我将我遇到问题后发现的注意点写了下来，以供参考。</h2><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li>下载git  </li></ul><p>百度官网下载git，这是个方方面面都用的到的工具   </p><ul><li>网上注册github账号  </li></ul><p>想部署到远端必须有这个，注意用户名写全小写英文的，可以有数字，但不要有中文和大写英文，免得造成不必要的麻烦。 </p><p>创建的数据库最好是用户名.github.io的格式，理由同上，其中.github.io的后缀必须要有。  </p><ul><li>下载nodejs  </li></ul><p>同样官网下载，下载方法自行百度，请仔细阅读下载流程，一定记得选Add。（具体网上有)   </p><ul><li>配置node环境变量  </li></ul><p>打开下载好的nodejs文件夹，新建node_cecal和node_global。  </p><p>我的文件地址是D:\Program Files\nodejs，具体看自己下载情况  </p><p>右击此电脑，选择属性，高级系统设置，环境变量<br>在用户变量PATH新建D:\Program Files\nodejs\node_global\ 具体位置看自己安装位置<br>在系统变量中新建变量名NODE_PATH 变量位置D:\Program Files\nodejs\node_modules 位置依旧是自己安装的位置，这里写出的是我的安装位置。  </p><p>接着打开终端，指定路径到新建的两个文件夹npm config set prefix”D:\Program Files\nodejs\node_global”<br>和npm config cache”D:\Program Files\nodejs\node_cache”这里引号里的位置是自己的，别全抄我的。  </p><p>最后检查node和git的安装情况，一般git不会出问题，所以可以忽略。<br>使用 source install.sh test_git检查git<br>使用 source install.sh test_node检查node（这里其实不用这么麻烦，输node -v就可以，install.sh是装了脚本的命令）<br>最后检查一下npm用npm -v ，这是我自己的经验<br>以上均出现版本号是正常  </p><p>到这里，准备工作完成  </p><h2 id="开始搭建"><a href="#开始搭建" class="headerlink" title="开始搭建"></a>开始搭建</h2><ul><li>这里正常思路是直接手搭，但这方法对许多小白来说太不友好，所以这里推荐大佬的脚本搭建。  </li></ul><p>复制 （curl -O <a href="https://cdn.jsdelivr.net/gh/kjhuanhao/hexo-script@master/install.sh%EF%BC%89">https://cdn.jsdelivr.net/gh/kjhuanhao/hexo-script@master/install.sh）</a><br>【括号里都要】 任选一个文件夹使用git下载脚本即可，记住下载位置（脚本搭建这是第一步）。<br>注：手搭以后会写，这篇只分享友好小白的脚本搭建  </p><p>打开保存了脚本的文件夹，用git输入source install.sh hexo_win这样该有的基本就一键搭齐了。<br>接下来从自动配置的hexoblog文件夹打开git，用hexo s就可以查看博客了。  </p><ul><li>部署进github数据库<br>在存放脚本的目录用git输入  ./install.sh git_ssh开始配置密钥，英语不好的小伙伴建议全程百度翻译，不然就准备走我的老路吧（看不懂英语没密钥没部署就过了）  </li></ul><p>在进行第二个选项得到密钥后，打开你的github，将密钥添加上去（注意格式，全复制最ok）<br>运行3检查无误，运行4可能会告诉你公钥有问题什么的，不用管。  </p><p>确认部署完成后，在有脚本的文件夹中运行source install.sh deploy<br>将出现的up.sh复制进hexoblog目录下  </p><p>打开博客目录下的_config.yml文件，无法打开去网上下编译工具，随便一个都行。<br>拉至最下方，修改deploy内容，这里大佬的文章中写的很清楚，我不再赘述<br>然后在此目录下运行source up.sh 如果报错，运行cnpm install hexo-deployer-git –save或者是npm install hexo-deployer-git –save  </p><p>到这里，博客就搭建完成了，当然为了保险起见，在hexoblog目录打开git<br>依次输入hexo clean     hexo g    hexo d 最后hexo s查看  </p><h2 id="教我搭建的大佬搭建教程链接-amp-主题配置链接"><a href="#教我搭建的大佬搭建教程链接-amp-主题配置链接" class="headerlink" title="教我搭建的大佬搭建教程链接&amp;主题配置链接"></a>教我搭建的大佬搭建教程链接&amp;主题配置链接</h2><ul><li><p>b站<a href="https://space.bilibili.com/431556388?spm_id_from=333.788.b_765f7570696e666f.1">https://space.bilibili.com/431556388?spm_id_from=333.788.b_765f7570696e666f.1</a><br>（我是看他的视频开始搭建的，准备工作讲的很细，后面水了）  </p></li><li><p>脚本搭建<a href="https://hexoscript.gitbook.io/hexo-script/v/1.3-1/shi-yong-bu-zhou/yi-jian-bu-shu-hexo-bo-ke">https://hexoscript.gitbook.io/hexo-script/v/1.3-1/shi-yong-bu-zhou/yi-jian-bu-shu-hexo-bo-ke</a><br>从下载脚本到搭建完成我都是靠这篇  </p></li><li><p>主题修改<br><a href="https://blog.csdn.net/victoryxa/article/details/105841309">https://blog.csdn.net/victoryxa/article/details/105841309</a>  </p><p><a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md#%E4%BF%AE%E6%94%B9%E4%B8%BB%E9%A2%98%E9%A2%9C%E8%89%B2">https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md#%E4%BF%AE%E6%94%B9%E4%B8%BB%E9%A2%98%E9%A2%9C%E8%89%B2</a><br>【主题按b站视频中方式搭建即可，用其他的也没问题，百度方法很多，我只是做个汇总】<br>【文章中和链接中不同部分是我经验之谈，当然每个人的搭建过程都有区别，参考即可】<br>【新手上路，此篇无图】<br>【以后会有的】  </p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2020/10/25/hello-world/"/>
      <url>2020/10/25/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
