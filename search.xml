<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>linux学习笔记</title>
      <link href="2020/11/06/linux-xue-xi-bi-ji/"/>
      <url>2020/11/06/linux-xue-xi-bi-ji/</url>
      
        <content type="html"><![CDATA[<meta name="referrer" content="no-referrer"><h1 id="linux基本命令学习笔记"><a href="#linux基本命令学习笔记" class="headerlink" title="linux基本命令学习笔记"></a>linux基本命令学习笔记</h1><h2 id="基本命令符的含义"><a href="#基本命令符的含义" class="headerlink" title="基本命令符的含义"></a>基本命令符的含义</h2><ul><li><p>终端符号含义解释    </p><img src="/2020/11/06/linux-xue-xi-bi-ji/2.png" class>  <p>mujie 用户名，表示现在进行操作的是mujie这个用户<br>ubuntu 主机名称，我现在示例的主机是ubuntu<br>“~“ 指示用户位置，表示家目录[home目录]<br>Desktop 指示用户位置，表示我现在处于桌面目录中   </p></li><li><p>路径的概念<br>绝对路径：从根目录开始到该目录的全部路径，例如：D:\CTF\boke\mybolg\hexoblog 就是到hexoblog的绝对路径<br>相对路径：指由这个文件所在的路径引起的跟其它文件（或文件夹）的路径关系，比如我现在如果处于mybolg文件夹中，那么hexoblog和boke两个<br>相邻路径都是相对与mybolg文件夹的相对路径。   </p></li><li><p>命令的格式  </p><img src="/2020/11/06/linux-xue-xi-bi-ji/3.png" class> <p>cat是用于查看文件的命令，-b是选项，mu是文件夹名称<br>每个选项格式均为[-选项字母]看情况选择是否添加<br>选项可连续使用，如ls -alh  </p></li></ul><h3 id="linux学习须知"><a href="#linux学习须知" class="headerlink" title="linux学习须知"></a>linux学习须知</h3><ul><li><p>软件包的概念<br>linux系统的常用软件都储存在数据库中，下载时只是用命令从数据库中下载，所以非常方便。    </p></li><li><p>软件源<br>软件源是指下载软件的数据库，因为linux是国外的系统，所以如果按默认软件源，下载软件的速度会非常感人。所以有时需要将软件源设置到国内的镜像，以提升下载速度。 </p></li><li><p>Tab键<br>快速补齐命令，是linux系统操作是非常常用的按键。还可用于忘记命令时进行提示等操作，   </p></li></ul><h2 id="命令笔记"><a href="#命令笔记" class="headerlink" title="命令笔记"></a>命令笔记</h2><h3 id="文件的创建-amp-目录切换"><a href="#文件的创建-amp-目录切换" class="headerlink" title="文件的创建&amp;目录切换"></a>文件的创建&amp;目录切换</h3><h4 id="文件创建命令"><a href="#文件创建命令" class="headerlink" title="文件创建命令"></a>文件创建命令</h4><ul><li>touch<br>创建一个文件，例：touch 111.txt 意为创建一个名为111.txt的文件<br>同时创建多个同级文件，例 touch 111 112 113 114   </li></ul><ul><li>mkdir<br>创建一个文件夹，例：mkdir 111 意为创建一个名为111的文件夹<br>同时创建多个同级目录，例  mkdir 111 112 113 114   </li></ul><p>  -p选项<br>   同时创建多个递归目录，例 mkdir -p 111/112/113/114   </p><h4 id="目录切换命令"><a href="#目录切换命令" class="headerlink" title="目录切换命令"></a>目录切换命令</h4><ul><li>cd<br>切换目录<br>cd .. 回到上一级目录<br>cd . 留在当前目录<br>cd /切换至根目录<br>cd -切换至上一次工作路径<br>cd [目录名] 切换到指定目录，<br>注：cd 命令相对路径只能一级一级切换，如同图形界面只能一个一个打开文件夹  <pre><code> cd命令绝对路径可以直接打开目标文件，无需一级一级切换。  </code></pre></li></ul><h3 id="查看文件-amp-文件复制与移动删除"><a href="#查看文件-amp-文件复制与移动删除" class="headerlink" title="查看文件&amp;文件复制与移动删除"></a>查看文件&amp;文件复制与移动删除</h3><h4 id="查看文件命令"><a href="#查看文件命令" class="headerlink" title="查看文件命令"></a>查看文件命令</h4><ul><li>ls 查看当前目录下的文件   </li><li>a选项，查看所有文件，包括隐藏文件。例<img src="/2020/11/06/linux-xue-xi-bi-ji/1.png" class>     其中文件名前有点的为隐藏文件  </li></ul><p>  -l选项，查看该目录下文件的详细信息  </p><img src="/2020/11/06/linux-xue-xi-bi-ji/4.png" class>    <p>  -h选项，使查看到的内容更加人性化<br>  这里直观的看到内存从一些看不懂的数字变为了看的懂的表示方法  </p><img src="/2020/11/06/linux-xue-xi-bi-ji/5.png" class><ul><li>tree 以树状图的方式查看所在目录下的文件<br>需要运行命令下载，按终端提示即可  </li></ul><ul><li>cat 查看文件内容  </li><li>b选项，将查看到的内容输出行号，空行不输出  <img src="/2020/11/06/linux-xue-xi-bi-ji/6.png" class>  如图3行和4行中间无行号  </li></ul><p>-n选项，输出所有行号，包括空行。  </p><img src="/2020/11/06/linux-xue-xi-bi-ji/7.png" class>  <p>如图可见空行也输出了行号  </p><ul><li><p>more 查看文件内容<br>基本用法同cat类似，但如遇到内容极多的文件，cat命令直接显示至最底部，more从最开始按页显示。  </p><img src="/2020/11/06/linux-xue-xi-bi-ji/8.png" class>  <p>按空格一次翻一页<br>按Enter向下 n 行，需要定义。默认为 1 行<br>按Ctrl+B后退一页<br>按Ctrl+F向前一页<br>按q退出查看  </p></li><li><p>grep 查看文件<br>不同于cat和more，grep后接字符可查找指定内容<br>如grep 11 mu 意为查看mu文件中所有包含11的行    </p><ul><li>pwd 查看当前工作路径  </li></ul></li></ul><h4 id="文件的复制-amp-移动-amp-删除"><a href="#文件的复制-amp-移动-amp-删除" class="headerlink" title="文件的复制&amp;移动&amp;删除"></a>文件的复制&amp;移动&amp;删除</h4><ul><li><p>cp 复制文件<br>格式为cp （需复制文件的位置）/[需复制文件的文件名] (复制后文件的位置)/ [复制后文件的文件名]<br>括号内内容可不选，仅用于从一个大目录到另一个大目录<br>如cp ./ mu ~/Desktop mi 意为将当前目录下的文件mu复制到桌面，并命名为mi（同一位置不能出现两个同名文件）  </p></li><li><p>i选项，出现重名文件询问是否覆盖  </p><img src="/2020/11/06/linux-xue-xi-bi-ji/9.png" class>  </li><li><p>mv 对文件重命名或移动文件<br> 在同一目录中操作，如mv mu mi意为将mu文件重命名为mi<br> 移动至其他文件夹夹，格式等同与cp命令但无需移动后文件名，如mv mu ./114意为将m文件mu移动至114文件夹  </p></li><li><p>rmdir 删除文件夹<br>rmdir命令只能删除文件夹，无法删除文件<br>与创建文件夹命令mkdir对应  </p></li><li><p>rm 删除文件<br>rm 后加文件名可删除文件，但无法删除文件夹  </p></li><li><p>r选项，删除文件夹和目录，如rm -r 114是删除114这个文件夹  </p></li><li><p>rf选项，删除且不询问  </p></li><li><p>i选项，删除前逐一询问<br>注：rm -r命令需谨慎使用，一不小心就会成rm -rf / 删库  </p></li><li><p>clear 清空终端页面内容与缓存，超级常用的命令。  </p></li></ul><h3 id="用户权限及组管理"><a href="#用户权限及组管理" class="headerlink" title="用户权限及组管理"></a>用户权限及组管理</h3><h4 id="用户权限详解"><a href="#用户权限详解" class="headerlink" title="用户权限详解"></a>用户权限详解</h4><ul><li>ls -l 查看页面解释  <img src="/2020/11/06/linux-xue-xi-bi-ji/4.png" class>  解释顺序从左到右<br>第一个d(-)说明文件类型，d为文件夹，-为文件<br>rwxrwxr-x 三位数为一组，从左到右依次为拥有者权限，组权限，其他人的权限<br>r 可读权限，常用数字4代替<br>w 可写权限，常用数字2代替<br>x 可执行权限，常用数字1代替  </li></ul><p>第一个mujie意为该目录的拥有者（创建者）为用户mujie，对应第一组权限<br>第二个mujie意为组名称为mujie，对应第二组权限  </p><h4 id="root权限的获取"><a href="#root权限的获取" class="headerlink" title="root权限的获取"></a>root权限的获取</h4><ul><li>获取命令<br>sudo passwd root 获取root权限并设置密码  <img src="/2020/11/06/linux-xue-xi-bi-ji/12.png" class>  设置后用su（切换用户命令）即可进入root<br>设置后使用sudo可用root运行后续命令，但只能进入五分钟，超过五分钟需重新输入密码  </li></ul><h4 id="权限的修改"><a href="#权限的修改" class="headerlink" title="权限的修改"></a>权限的修改</h4><ul><li>chmod 修改文件权限<br>chomd后常跟权限选项<br>例：chomd +r 1 给所有用户1文件的可读权限<br>chmod -r 1 给所有用户取消对1文件的可读权限<br>r w x 用法均相同  <img src="/2020/11/06/linux-xue-xi-bi-ji/10.png" class>  </li><li>-指定权限修改<br>指定修改文件权限用数字表示<br>-R修改一个目录下所有文件权限<br>例：chmod -R 777 1<br>这里7表示权限所对应的数字和，此时为rwx（4+2+1=7）,其他同理  <img src="/2020/11/06/linux-xue-xi-bi-ji/11.png" class>  </li></ul><h4 id="创建组，删除组-amp-查看组，修改文件所属组"><a href="#创建组，删除组-amp-查看组，修改文件所属组" class="headerlink" title="创建组，删除组&amp;查看组，修改文件所属组"></a>创建组，删除组&amp;查看组，修改文件所属组</h4><h5 id="创建与删除组"><a href="#创建与删除组" class="headerlink" title="创建与删除组"></a>创建与删除组</h5><p>创建组与删除组均为group起头<br>创建组与删除组均需在root权限下运行或使用sudo命令   </p><ul><li><p>groupadd 创建组<br>例：sudo groupadd 1234 创建一个名为1234的组  </p></li><li><p>groupdel 删除组<br>例：sudo groupdel 1234 删除名为1234的组  </p><h5 id="查看组-amp-修改文件所属组"><a href="#查看组-amp-修改文件所属组" class="headerlink" title="查看组&amp;修改文件所属组"></a>查看组&amp;修改文件所属组</h5></li><li><p>查看组<br>首先须知，linux中，所有组的信息均储存在etc目录下的group文件中<br>故，无改动情况下，用任意文件查看命令均可查看<br>例：cat /etc/group</p><img src="/2020/11/06/linux-xue-xi-bi-ji/13.png" class>  </li><li><p>修改文件所属组<br>chgrp<br>各式：chgrp [修改的目标组]  [修改的文件名]<br>例chgrp 12345 1 </p><img src="/2020/11/06/linux-xue-xi-bi-ji/14.png" class>  <p>如图可见组名从原来的mujie变成了12345  </p></li></ul><h4 id="增加与删除用户"><a href="#增加与删除用户" class="headerlink" title="增加与删除用户"></a>增加与删除用户</h4><ul><li><p>useradd 增加用户  </p></li><li><p>m选项，自动生成该用户的家目录  </p></li><li><p>g选项，指定用户所在组，否则自动创建与增加用户同名的组<br>例：sudo useradd -mg zhangsan muyu  </p><img src="/2020/11/06/linux-xue-xi-bi-ji/15.png" class>    <img src="/2020/11/06/linux-xue-xi-bi-ji/16.png" class>   </li><li><p>userdel 删除用户  </p></li><li><p>r选项，同时删除创建的家目录<br>例：sudo userdel -r muyu  </p><img src="/2020/11/06/linux-xue-xi-bi-ji/17.png" class>  </li><li><p>注：在linux中，用户数据保存在etc目录下的passwd文件中，查看用户只需要用任意查看命令查看即可<br>例：cat /etc/passwd   </p></li><li><p>passwd 添加用户的密码<br>格式：passwd [用户名]<br>一般每次创建用户后都需要设置密码<br>例：sudo passwd muyu  </p><img src="/2020/11/06/linux-xue-xi-bi-ji/18.png" class>   </li></ul><h4 id="切换用户-amp-查看用户信息"><a href="#切换用户-amp-查看用户信息" class="headerlink" title="切换用户&amp;查看用户信息"></a>切换用户&amp;查看用户信息</h4><ul><li><p>su 切换用户<br>只输入su时，默认切换至root用户（管理员用户）<br>su [用户名] 切换至目标目录，但不会切换至目标文件夹<br>su - 用户名 切换至目标用户的同时切换至目标用户的家目录文件夹  </p><img src="/2020/11/06/linux-xue-xi-bi-ji/19.png" class>  </li><li><p>who 查看当前登录的用户列表  </p><img src="/2020/11/06/linux-xue-xi-bi-ji/20.png" class>  <p>如图，表示现在muyu用户只有mujie用户登录  </p></li><li><p>whoami 查看当前所在用户  </p><img src="/2020/11/06/linux-xue-xi-bi-ji/21.png" class>  <p>如图表示现在我处于muyu这个用户  </p></li><li><p>id 查看当前用户的id<br>id是用户的识别信息，分为UID和GID。如果说用户名是qq昵称，那id就是账号<br>UID 用户标识<br>GID 组标识  </p></li><li><p>exit 退出当前用户/返回上一个用户<br>使用exit可退出当前所在的用户<br>举个例子，我从mujie用户su进root用户，再从root用户进muyu用户，使用exit命令会使我从muyu用户退出到root用户，而不是退至mujie用户。再从root用户exit，才可退出至mujie用户。  </p><img src="/2020/11/06/linux-xue-xi-bi-ji/22.png" class>   </li></ul><h4 id="主组与附加组"><a href="#主组与附加组" class="headerlink" title="主组与附加组"></a>主组与附加组</h4><ul><li>概念<br>主组：创建用户时设定的组，一般不轻易修改<br>附加组：创建后添加的组，给主组用户提供附加组的权限，如sudo就是一个附加组，无sudo附加组的用户无法执行sudo命令。  </li><li>usermod 修改组<br>-G 修改附加组<br>格式：usermod -G [附加组名称]  [用户名称]<br>-g 修改主组<br>格式：usermod -g [目标主组] [用户名称]  </li><li>修改终端显示页面<br>-s 修改shell(终端显示界面)<br>格式：usermod -s [目标终端页面路径] [用户名]<br>例：usermod -s /bin/bash muyu<br>修改前   <img src="/2020/11/06/linux-xue-xi-bi-ji/23.png" class>  修改后：  <img src="/2020/11/06/linux-xue-xi-bi-ji/24.png" class>  可以明显看到页面美化了一层<br>注：linux中有两中主要的终端界面，分别是dash和bash。一般linux创建用户默认为dash，因为系统觉得这样操作更方便，但dash页面不美观也不易辨识，在输入一些操作指令时会出现重大缺陷，所以有时需要我们根据需要手动修改。<br>而bash便是我们常用的终端界面，有颜色有位置标识。  </li><li>which 查看命令执行文件位置<br>往往在输入cat /etc/group 查看组位置时容易忘记如etc的目录，所有常需要一个命令查找。<br>例：which sudo  <img src="/2020/11/06/linux-xue-xi-bi-ji/25.png" class>  </li></ul><h3 id="打包压缩与软件安装"><a href="#打包压缩与软件安装" class="headerlink" title="打包压缩与软件安装"></a>打包压缩与软件安装</h3><h4 id="打包压缩"><a href="#打包压缩" class="headerlink" title="打包压缩"></a>打包压缩</h4><p>-tar 打包命令<br> 格式：tar -cvf [打包后文件名。tar] [要打包的文件]<br> <img src="/2020/11/06/linux-xue-xi-bi-ji/26.png" class><br> 注：打包不是压缩，打包文件名后要加.tar  </p><ul><li><p>tar 解包命令<br>格式：tar -xvf [需解包文件]  </p><img src="/2020/11/06/linux-xue-xi-bi-ji/27.png" class>  <p>-c选项，生成档案文件，创建打包文件<br>-v选项，列出归档解档详细进程，显示进度。<br>-f选项，指定档案名称，f后解.tar，所以一定要放在最后。<br>-x选项，解开档案文件  </p></li><li><p>gzip压缩命令<br>格式：gzip [要压缩的tar文件]<br>例：gzip qwer.tar  </p><img src="/2020/11/06/linux-xue-xi-bi-ji/28.png" class>  </li><li><p>bzip2压缩命令<br>格式同gzip  </p></li><li><p>注：gzip和bzip2还有tar一般不单独使用，而是联合使用<br>gzip代表选项-z<br>bzip2代表选项-b<br>故常用的打包压缩命令为 tar -zcvf [压缩包名.tar.gz] [压缩文件名]<br>故常用的解压缩命令为 tar -zxvf [压缩包名.tar.gz]<br>bzip2同理  </p></li></ul><p>-C选项，指定压缩/解压位置<br> <img src="/2020/11/06/linux-xue-xi-bi-ji/29.png" class></p><h4 id="软件安装"><a href="#软件安装" class="headerlink" title="软件安装"></a>软件安装</h4><ul><li>apt install 安装命令<br>需在sudo下运行<br>格式：sudo apt install [软件包]<br>例：sudo apt install sl  下载一个小火车软件，终端输入sl会出现火车  <img src="/2020/11/06/linux-xue-xi-bi-ji/30.png" class>  sudo apt install htop 下载htop 效果是让top命令显示的界面更好看。  <img src="/2020/11/06/linux-xue-xi-bi-ji/31.png" class>  <img src="/2020/11/06/linux-xue-xi-bi-ji/32.png" class>  </li></ul><ul><li>apt remove 卸载命令<br>须在sudo下运行<br>格式：sudo apt remove [软件名]<br>例：sudo apt remove sl 卸载sl软件  </li></ul><ul><li>apt upgrade 升级命令<br>须在sudo下运行<br>格式：sudo apt upgrade 自动检查升级并发出更新情求。  <img src="/2020/11/06/linux-xue-xi-bi-ji/33.png" class>  </li></ul><ul><li>设置软件源<br>设置方法按自己具体版本在百度找方法。  </li></ul><h3 id="系统信息"><a href="#系统信息" class="headerlink" title="系统信息"></a>系统信息</h3><ul><li><p>date 查看当前时间  </p><ul><li>cal 查看日历<br>-y选项，查看一年的日历  </li></ul></li><li><p>df 显示磁盘剩余空间大小<br>-h使显示内容更人性化  </p></li><li><p>du 显示文件占用空间大小<br>-h使显示内容更人性化<br>注：du命令后可接具体文件夹查看  </p><img src="/2020/11/06/linux-xue-xi-bi-ji/34.png" class>   </li><li><p>ps 查看当前用户通过终端启动的 进程<br>aux选项，查看正在进行的全部进程，前面-可加可不加<br>a选项，查看所有进程，包括其他用户进程<br>u选项，查看进程详细状态<br>x选项，查看没有终端控制的进程  </p></li><li><p>top 动态显示系统所有进程并排序<br>按q或ctrl+c退出top查看页面，其中显示的页面第一行是进程代码，需要特别关注。  </p></li><li><p>kill 关闭/杀死进程<br>-9强制终止进程<br>格式：kill -9 [进程代码]   </p></li></ul><h3 id="远程管理"><a href="#远程管理" class="headerlink" title="远程管理"></a>远程管理</h3><ul><li><p>远程连接的准备工作  </p><ul><li>下载xshell，官网即可下载选学生用免费版即可。</li><li>ifconfig 查看ip地址，在win10主机中IP查看命令为ipconfig。  <img src="/2020/11/06/linux-xue-xi-bi-ji/35.png" class>  如图，上方ens33对应的inet对应ip地址，用于和网络互通，下方lo对应inet为本机环回地址，用于检查本机网络连接状态。  </li><li>ping 测试网络连接量，常用来查看两台主机是否网络互通。<br>ping通是远程连接的前置条件。<br>用法：ping [IP地址/网址]  <img src="/2020/11/06/linux-xue-xi-bi-ji/36.png" class>  </li></ul></li><li><p>ssh 远程连接命令<br>格式：ssh [用户名]@[ip地址]<br>连接成功后即可访问目标主机/服务器（用xshell连接）<br>-p选项，指定端口位置   </p><img src="/2020/11/06/linux-xue-xi-bi-ji/37.png" class>  <img src="/2020/11/06/linux-xue-xi-bi-ji/38.png" class>  </li><li><p>scp 远程复制<br>格式：scp [要复制的文件] [用户名]@[IP地址]：[远程复制后文件位置]<br>scp -P 22 [用户名]@[IP地址]:[要复制的文件地址] [复制后文件地址]<br>-r选项，可以选择传送文件夹<br>-P选项，可以指定端口位置<br>注：ssh命令默认端口为22，非22时需要用-P指定。 </p><ul><li>注：Win系统无法使用该命令，建议下载xftp进行远程文件复制，无论服务器还是主机都方便快捷。<br>也可以使用FileZilla进行文件传输，我推荐xftp是因为在官网下载xshell是会同时下载xftp。  </li></ul></li><li><p>ssh 高级  </p><ul><li>ssh信息都储存在.ssh文件中。  </li><li>免密登录  <ul><li>公钥配置shh-kengen 一路回车即可  </li><li>公钥上传到服务器<br>ssh-copy-id -p [端口号] [用户名]@[ip地址]  </li></ul></li></ul></li></ul><h3 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h3><ul><li>echo （显示指定文字）与&gt;/&gt;&gt;（重定向）<br>echo命令通常与重定向同用<br>linux允许将内存追加到文件中<br>‘&gt;’输出，将终端上的内容输出的文件中，会覆盖文件。<br>‘&gt;&gt;’追加，在文件后追加终端中输入的内容。<br>格式：echo [终端内容] &gt; [文件名] 或 echo [终端内容] &gt;&gt; [文件名]    </li><li>‘|’管道<br>管道是将两个命令同时执行的条件，命令符为“|”<br>例：cat -n mi | grep 2 将文件mi加行号查看，并选出含有2的行（包括行号）  <img src="/2020/11/06/linux-xue-xi-bi-ji/39.png" class>  </li><li>软连接与硬链接  <ul><li>ln 建立硬链接<br>-s选项，建立软连接<br>格式：ln -s [文件路径(绝对或相对)]<br>注：绝对比相对更稳定<br>软连接与硬链接概念  <img src="/2020/11/06/linux-xue-xi-bi-ji/40.png" class>  </li></ul></li></ul><h4 id="vi命令"><a href="#vi命令" class="headerlink" title="vi命令"></a>vi命令</h4><pre><code>   vi的基本概念  </code></pre><p>　　基bai本上vi可分为三种操du作状态，分别是命令模式zhi(Command mode)、插入模dao式(Insert mode)和底线命令模式(Last line mode)，<br>　　各模式的功能区分如下：<br>　　1. Comand mode：控制屏幕光标的移动，字符或光标的删除，移动复制某区段及进入Insert mode下，或者到Last line mode。<br>　　2. Insert mode：唯有在Insert mode下，才可做文字数据输入，按Esc等可回到Comand mode。<br>　　3. Last line mode：将储存文件或离开编辑器，也可设置编辑环境，如寻找字符串、列出行号等。<br>　　不过可以把vi简化成两个模式，即是将Last line mode也算入Command mode,把vi分成Command 和Insert mode。<br>　　vi的基本操作<br>　　?进入vi<br>　　在系统提示符号输入vi及文件名称后，即可进入vi全屏幕编辑画面：<br>　　$ vi testfile<br>　　有一点要特别注意，就是您进入vi之后是处于“Command mode”下，您要切换到Insert mode才能输入文字。<br>　　初次用vi的用户都会想先用上下左右键移动光标，结果电脑一直叫，把自己气个半死，所以进入vi后，先不要乱动，<br>　　转换入Insert后再说。?切换至Insert mode编辑文件在Command mode下按‘i’、‘a’或‘o’三键就可进入Insert mode。<br>　　这时候您就可以开始输入文字了。<br>　　i: 插入，从目前光标所在之处插入所输入的文字。<br>　　a: 增加，目前光标所在的下一个字开始输入文字。<br>　　o: 插入新的一行，从行首开始输入文字。<br>　　?Insert的切换→Command mode，按Esc键<br>　　您目前处于Insert mode，您就只能一直打字。假如您发现打错字了，想用光标键往回移动，将该字删除，<br>　　就要按ESC键转换回Command mode，再删除文字。<br>　　?离开vi及存文件<br>　　在Command mode下，可按冒号“：”键入入Last line mode，例如：<br>　　:w filename (输入“w filename”，将文章存入指定的文件名filename)<br>　　:wq (输入“wq”，因为进入之时已经指定文件名testfile，所以会写入testfile并离开vi)<br>　　:q! (输入“q!”，强制离开并放弃编辑的文件)<br>　　Command mode功能键列表<br>　　在介绍command mode指令的时后，指令后面加上“常用”字眼的功能键，表示比较常用的vi指令，<br>　　请读者您一定要学会、记住。<br>　　(1)I、a、o切换进入Insert mode。[超级常用]<br>　　(2)移动光标<br>　　vi可以直接用键盘上的光标键来上下左右移动，但正规的vi是用小写英文字母<br>　　h、j、k、l，分别控制光标左、下、上、右移一格。<br>　　按Ctrl+B：屏幕往后移动一页。[常用]<br>　　按Ctrl+F：屏幕往前移动一页。[常用]<br>　　按Ctrl+U：屏幕往后移动半页。<br>　　按Ctrl+D：屏幕往前移动半页。<br>　　按 0 (数字零)：移动文章的开头。[常用]<br>　　按 G：移动到文章的最后。[常用]<br>　　按 w：光标跳到下个word的开头。[常用]<br>　　按 e：光标跳到下个word的字尾。<br>　　按 b：光标回到上个word的开头。<br>　　按 $：移到光标所在行的行尾。[常用]<br>　　按 ^：移到该行第一个非空白的字符。<br>　　按 0：移到该行的开头位置。[常用]<br>　　按 #：移到该行的第#个位置，例：51、121。[常用]<br>　　(3)删除文字<br>　　x：每按一次删除光标所在位置的后面一个字符。[超常用]<br>　　#x：例如，6x 表删除光标所在位置的后面6个字符。[常用]<br>　　X：大字的X，每按一次删除光标所在位置的前面一个字符。<br>　　#X：例如，20X 表删除光标所在位置的前面20个字符。<br>　　dd：删除光标所在行。[超常用]<br>　　#dd：例如，6dd表删除从光标所在的该行往下数6行之文字。[常用]<br>　　(4)复制<br>　　yw：将光标所在处到字尾的字符复制到缓冲区中。<br>　　(想在和#x、#X的功能相反)<br>　　p：将缓冲区内的字符粘贴到光标所在位置(指令‘yw’与‘p必须搭配使用)。<br>　　yy：复制光标所在行。[超常用]<br>　　p：复制单行到您想粘贴之处。(指令‘yy’与‘p’必须搭配使用)<br>　　#yy：如：6yy表示拷贝从光标所在的该行往下数6行之文字。[常用]<br>　　p:复制多行到您想粘贴之处。(指令‘#yy’与‘p’必须搭配使用)<br>　　“ayy：将复制行放入buffer a, vi提供buffer功能，可将常用的数据存在buffer<br>　　“ap：将放在buffer a的数据粘贴。<br>　　“b3yy：将三行数据存入buffer b。<br>　　“b3p：将存在buffer b的资料粘贴<br>　　(5)取代<br>　　r: 取代光标所在处的字符：[常用]<br>　　R：取代字符直到按Esc为止。<br>　　(6)复原(undo)上一个指令<br>　　u：假如您误操作一个指令，可以马上按u，回复到上一个操作。[超常用]<br>　　.: .可以重复执行上一次的指令。<br>　　(7)更改<br>　　cw：更改光标所在处的字到字尾$处。<br>　　c#w：例如，c3w代表更改3个字。<br>　　(8)跳至指定行<br>　　Ctrl+G：列出光标所在行的行号。<br>　　#G：例如，15G，表示移动光标至文章的第15行行首。[常用]<br>　　Last line mode下指令简介<br>　　读者您要使用Last line mode之前，请记得先按Esc键确定您已经处于Command mode下后，再按冒号“：”或“/”或“?”<br>　　三键的其中一键进入Last line mode。<br>　　1.列出行号<br>　　set nu: 输入“set nu”后，会在文章的每一行前面列出行号。<br>　　2.跳到文章的某一行<br>　　#：井号代表一个数字，在Last line mode提示符号“：”前输入数字，再按Enter就会跳到该行了，<br>　　如：15[Enter]就会跳到文章的第15行。[常用]<br>　　3.寻找字符串<br>　　/关键字：先按/，再输入您想寻找的字，如果第一次找的关键字不是您相尽可能的，可以一直按n会往下寻找到您要的关键字为止。<br>　　?关键字：先按?，再输入您想寻找的字，如果第一次找的关键字不是您想要的，可以按n会往前寻找到您要的关键字为止。<br>　　4.取代字符串<br>　　1，$s/string/replae/g：在last line mode输入“1，$s/string/replace/g”会将全文的string字符串取代为replace字符串，<br>　　其中1,$s就是指搜寻区间为文章从头至尾的意思，g则是表示全部取代不必确认。<br>　　%s/string/replace/c：同样会将全文的string字符串取代为replace字符串，和上面指令不同的地方是，%s和1,$s是相同的功能，<br>　　c则是表示要替代之前必须再次确认是否取代。<br>　　1,20s/string/replace/g：将1至20行间的string替代为relpace字符串。<br>　　5.存文件<br>　　w：在last line mode提示符号“：”前按w即可将文件存起来。[超常用]<br>　　#，# w filename：如果您想摘取文章的某一段，存成另一个文件，可用这个指令#代表行号，例如30,50 w nice，<br>　　将您正在编辑文章的第30~50行存成nice这个文件。<br>　　6.离开<br>　　q：按q就离开，有时如果无法离开vi，可搭配“!：强置离开vi，如“q!”<br>　　qw：一般建议离开时，搭配w一起使用，如此离开时还可存文件     </p><ul><li>以上摘抄自百度知道<br>附学长给的图片   </li></ul><h2 id="笔记来自与后话"><a href="#笔记来自与后话" class="headerlink" title="笔记来自与后话"></a>笔记来自与后话</h2><ul><li>到这里linux笔记告一段落，我会根据后续的学习不断对笔记进行更新，达到完善的目的。<br>学习语言和命令在于多练习。而非一味观看。文章和视频各有优缺，按自己需求选择。  </li><li>笔记为学习linux视频与文章后自己的总结，在此附上资料链接  <ul><li>视频: linux命令大全，来自b站，讲的很详细<br><a href="https://www.bilibili.com/video/BV14z4y1Q7Hm?p=1">https://www.bilibili.com/video/BV14z4y1Q7Hm?p=1</a>  <ul><li>文章： 只介绍了31个常用命令，但每个命令选项齐全<br><a href="https://www.runoob.com/w3cnote/linux-common-command-2.html">https://www.runoob.com/w3cnote/linux-common-command-2.html</a><br>链接后续会随学习加深更新</li></ul></li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学习第一步，使用hexo搭建自己的博客</title>
      <link href="2020/11/03/xue-xi-di-yi-bu-shi-yong-hexo-da-jian-zi-ji-de-bo-ke/"/>
      <url>2020/11/03/xue-xi-di-yi-bu-shi-yong-hexo-da-jian-zi-ji-de-bo-ke/</url>
      
        <content type="html"><![CDATA[<h1 id="小白的hexo博客快速搭建法"><a href="#小白的hexo博客快速搭建法" class="headerlink" title="小白的hexo博客快速搭建法"></a>小白的hexo博客快速搭建法</h1><h2 id="注：此文章是在看大佬的搭建法后的总结和自己写博客的尝试，想搭博客的小伙伴可以直接看文末链接。"><a href="#注：此文章是在看大佬的搭建法后的总结和自己写博客的尝试，想搭博客的小伙伴可以直接看文末链接。" class="headerlink" title="注：此文章是在看大佬的搭建法后的总结和自己写博客的尝试，想搭博客的小伙伴可以直接看文末链接。"></a>注：此文章是在看大佬的搭建法后的总结和自己写博客的尝试，想搭博客的小伙伴可以直接看文末链接。</h2><h2 id="我将我遇到问题后发现的注意点写了下来，以供参考。"><a href="#我将我遇到问题后发现的注意点写了下来，以供参考。" class="headerlink" title="我将我遇到问题后发现的注意点写了下来，以供参考。"></a>我将我遇到问题后发现的注意点写了下来，以供参考。</h2><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li>下载git  </li></ul><p>百度官网下载git，这是个方方面面都用的到的工具   </p><ul><li>网上注册github账号  </li></ul><p>想部署到远端必须有这个，注意用户名写全小写英文的，可以有数字，但不要有中文和大写英文，免得造成不必要的麻烦。 </p><p>创建的数据库最好是用户名.github.io的格式，理由同上，其中.github.io的后缀必须要有。  </p><ul><li>下载nodejs  </li></ul><p>同样官网下载，下载方法自行百度，请仔细阅读下载流程，一定记得选Add。（具体网上有)   </p><ul><li>配置node环境变量  </li></ul><p>打开下载好的nodejs文件夹，新建node_cecal和node_global。  </p><p>我的文件地址是D:\Program Files\nodejs，具体看自己下载情况  </p><p>右击此电脑，选择属性，高级系统设置，环境变量<br>在用户变量PATH新建D:\Program Files\nodejs\node_global\ 具体位置看自己安装位置<br>在系统变量中新建变量名NODE_PATH 变量位置D:\Program Files\nodejs\node_modules 位置依旧是自己安装的位置，这里写出的是我的安装位置。  </p><p>接着打开终端，指定路径到新建的两个文件夹npm config set prefix”D:\Program Files\nodejs\node_global”<br>和npm config cache”D:\Program Files\nodejs\node_cache”这里引号里的位置是自己的，别全抄我的。  </p><p>最后检查node和git的安装情况，一般git不会出问题，所以可以忽略。<br>使用 source install.sh test_git检查git<br>使用 source install.sh test_node检查node（这里其实不用这么麻烦，输node -v就可以，install.sh是装了脚本的命令）<br>最后检查一下npm用npm -v ，这是我自己的经验<br>以上均出现版本号是正常  </p><p>到这里，准备工作完成  </p><h2 id="开始搭建"><a href="#开始搭建" class="headerlink" title="开始搭建"></a>开始搭建</h2><ul><li>这里正常思路是直接手搭，但这方法对许多小白来说太不友好，所以这里推荐大佬的脚本搭建。  </li></ul><p>复制 （curl -O <a href="https://cdn.jsdelivr.net/gh/kjhuanhao/hexo-script@master/install.sh%EF%BC%89">https://cdn.jsdelivr.net/gh/kjhuanhao/hexo-script@master/install.sh）</a><br>【括号里都要】 任选一个文件夹使用git下载脚本即可，记住下载位置（脚本搭建这是第一步）。<br>注：手搭以后会写，这篇只分享友好小白的脚本搭建  </p><p>打开保存了脚本的文件夹，用git输入source install.sh hexo_win这样该有的基本就一键搭齐了。<br>接下来从自动配置的hexoblog文件夹打开git，用hexo s就可以查看博客了。  </p><ul><li>部署进github数据库<br>在存放脚本的目录用git输入  ./install.sh git_ssh开始配置密钥，英语不好的小伙伴建议全程百度翻译，不然就准备走我的老路吧（看不懂英语没密钥没部署就过了）  </li></ul><p>在进行第二个选项得到密钥后，打开你的github，将密钥添加上去（注意格式，全复制最ok）<br>运行3检查无误，运行4可能会告诉你公钥有问题什么的，不用管。  </p><p>确认部署完成后，在有脚本的文件夹中运行source install.sh deploy<br>将出现的up.sh复制进hexoblog目录下  </p><p>打开博客目录下的_config.yml文件，无法打开去网上下编译工具，随便一个都行。<br>拉至最下方，修改deploy内容，这里大佬的文章中写的很清楚，我不再赘述<br>然后在此目录下运行source up.sh 如果报错，运行cnpm install hexo-deployer-git –save或者是npm install hexo-deployer-git –save  </p><p>到这里，博客就搭建完成了，当然为了保险起见，在hexoblog目录打开git<br>依次输入hexo clean     hexo g    hexo d 最后hexo s查看  </p><h2 id="教我搭建的大佬搭建教程链接-amp-主题配置链接"><a href="#教我搭建的大佬搭建教程链接-amp-主题配置链接" class="headerlink" title="教我搭建的大佬搭建教程链接&amp;主题配置链接"></a>教我搭建的大佬搭建教程链接&amp;主题配置链接</h2><ul><li><p>b站<a href="https://space.bilibili.com/431556388?spm_id_from=333.788.b_765f7570696e666f.1">https://space.bilibili.com/431556388?spm_id_from=333.788.b_765f7570696e666f.1</a><br>（我是看他的视频开始搭建的，准备工作讲的很细，后面水了）  </p></li><li><p>脚本搭建<a href="https://hexoscript.gitbook.io/hexo-script/v/1.3-1/shi-yong-bu-zhou/yi-jian-bu-shu-hexo-bo-ke">https://hexoscript.gitbook.io/hexo-script/v/1.3-1/shi-yong-bu-zhou/yi-jian-bu-shu-hexo-bo-ke</a><br>从下载脚本到搭建完成我都是靠这篇  </p></li><li><p>主题修改<br><a href="https://blog.csdn.net/victoryxa/article/details/105841309">https://blog.csdn.net/victoryxa/article/details/105841309</a>  </p><p><a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md#%E4%BF%AE%E6%94%B9%E4%B8%BB%E9%A2%98%E9%A2%9C%E8%89%B2">https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md#%E4%BF%AE%E6%94%B9%E4%B8%BB%E9%A2%98%E9%A2%9C%E8%89%B2</a><br>【主题按b站视频中方式搭建即可，用其他的也没问题，百度方法很多，我只是做个汇总】<br>【文章中和链接中不同部分是我经验之谈，当然每个人的搭建过程都有区别，参考即可】<br>【新手上路，此篇无图】<br>【以后会有的】<br> 注：hexo可能会出现插入文件失败的问题，需用插入。而不是<img src="/mujie00/mujie00.github.io/2020/11/03/xue-xi-di-yi-bu-shi-yong-hexo-da-jian-zi-ji-de-bo-ke/%E5%9B%BE%E7%89%87%E5%90%8D.%E6%A0%BC%E5%BC%8F">  </p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2020/10/25/hello-world/"/>
      <url>2020/10/25/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
